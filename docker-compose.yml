
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.4.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 20000000
      KAFKA_MAX_REQUEST_SIZE: 20000000
    volumes:
      - kafka_data:/var/lib/kafka
    networks:
      - backend

  app:
    build: .
    container_name: flight_weather_dev
    volumes:
      - ./jars:/app/jars
      - .:/app
    working_dir: /app
    command: tail -f /dev/null
    depends_on:
      - kafka
      - postgres
    networks:
      - backend

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: flight_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./infra/00_db_schemas.sql:/docker-entrypoint-initdb.d/00_db_schemas.sql
      - ./infra/avstack/avstack_bronze_ddl.sql:/docker-entrypoint-initdb.d/01_aviationstack_bronze_ddl.sql
      - ./infra/avstack/avstack_silver_ddl.sql:/docker-entrypoint-initdb.d/02_aviationstack_silver_ddl.sql
      - ./infra/avstack/avstack_gold_ddl.sql:/docker-entrypoint-initdb.d/03_aviationstack_gold_ddl.sql
    networks:
      - backend

volumes:
  kafka_data:
  zookeeper_data:
  pgdata:

networks:
  backend: